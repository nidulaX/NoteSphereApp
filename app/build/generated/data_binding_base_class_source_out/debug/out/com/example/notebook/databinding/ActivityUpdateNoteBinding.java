// Generated by view binder compiler. Do not edit!
package com.example.notebook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.notebook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateNoteBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText UpdateEditTxtContent;

  @NonNull
  public final EditText UpdateEditTxtTitle;

  @NonNull
  public final TextView txtUpdateNote;

  @NonNull
  public final ImageView updateSaveNoteBtn;

  private ActivityUpdateNoteBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText UpdateEditTxtContent, @NonNull EditText UpdateEditTxtTitle,
      @NonNull TextView txtUpdateNote, @NonNull ImageView updateSaveNoteBtn) {
    this.rootView = rootView;
    this.UpdateEditTxtContent = UpdateEditTxtContent;
    this.UpdateEditTxtTitle = UpdateEditTxtTitle;
    this.txtUpdateNote = txtUpdateNote;
    this.updateSaveNoteBtn = updateSaveNoteBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.UpdateEditTxtContent;
      EditText UpdateEditTxtContent = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEditTxtContent == null) {
        break missingId;
      }

      id = R.id.UpdateEditTxtTitle;
      EditText UpdateEditTxtTitle = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEditTxtTitle == null) {
        break missingId;
      }

      id = R.id.txtUpdateNote;
      TextView txtUpdateNote = ViewBindings.findChildViewById(rootView, id);
      if (txtUpdateNote == null) {
        break missingId;
      }

      id = R.id.updateSaveNoteBtn;
      ImageView updateSaveNoteBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateSaveNoteBtn == null) {
        break missingId;
      }

      return new ActivityUpdateNoteBinding((RelativeLayout) rootView, UpdateEditTxtContent,
          UpdateEditTxtTitle, txtUpdateNote, updateSaveNoteBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
